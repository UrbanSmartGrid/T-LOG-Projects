
TLOG_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803f00  00803f00  000000a2  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000048  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000000a2  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  000000d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000016fa  00000000  00000000  000000f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000013a4  00000000  00000000  000017eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000179  00000000  00000000  00002b8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00002d08  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000008b5  00000000  00000000  00002d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  000035e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .text         00000002  0000004c  0000004c  000000a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000035f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .text.main    00000004  00000048  00000048  0000009c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>
  26:	12 c0       	rjmp	.+36     	; 0x4c <__bad_interrupt>
  28:	11 c0       	rjmp	.+34     	; 0x4c <__bad_interrupt>
  2a:	10 c0       	rjmp	.+32     	; 0x4c <__bad_interrupt>
  2c:	0f c0       	rjmp	.+30     	; 0x4c <__bad_interrupt>
  2e:	0e c0       	rjmp	.+28     	; 0x4c <__bad_interrupt>
  30:	0d c0       	rjmp	.+26     	; 0x4c <__bad_interrupt>
  32:	0c c0       	rjmp	.+24     	; 0x4c <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62
  40:	03 d0       	rcall	.+6      	; 0x48 <_etext>
  42:	00 c0       	rjmp	.+0      	; 0x44 <_exit>

00000044 <_exit>:
  44:	f8 94       	cli

00000046 <__stop_program>:
  46:	ff cf       	rjmp	.-2      	; 0x46 <__stop_program>

Disassembly of section .text:

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000048 <main>:
int main(void)
{
    while(1)
    {
        //TODO:: Please write your application code 
		asm("NOP");
  48:	00 00       	nop
  4a:	fe cf       	rjmp	.-4      	; 0x48 <main>
